@model CheckPoint.Models.GameModels.GameCreate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Game", FormMethod.Post, new { enctype = "multipart/FormMethod-data" }))
{
    @Html.AntiForgeryToken()
   

<div class="form-horizontal">
    <h4>GameCreate</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ESRB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="color: black;">
            @Html.EnumDropDownListFor(model => model.ESRB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ESRB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" >
        @Html.LabelFor(model => model.PlatformID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="color: black;">
            @Html.DropDownList("PlatformID", (IEnumerable<SelectListItem>)ViewBag.Platform, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlatformID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Developer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Developer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Developer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @*@{ WebImage photo = null;
        var newFileName = "";
        var imagePath = "";

        if (IsPost)
        {
            photo = WebImage.GetImageFromRequest();
            if (photo != null)
            {
                newFileName = Guid.NewGuid().ToString() + "_" +
                    Path.GetFileName(photo.FileName);
                imagePath = @"Assets\" + newFileName;

                photo.Save(@"~\" + imagePath);
            }
        }
    }*@
    <legend> Upload Game Image </legend>
    <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
    @*<form action="" method="post" enctype="multipart/form-data">
                <fieldset>
                    <legend> Upload Image </legend>
                    <label for="Image">Image</label>
                <input type="file" name="Image" />
                <br />
            </fieldset>
        </form>*@
    @*@if (imagePath != "")
    {
        <div class="result">
            <img src="@imagePath" alt="image" />

        </div>*@
    
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
